apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

// use this docker plugin for creating a couchdb container during integration testing
apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.6'
    }
}

eclipse {
    classpath {
       downloadSources=true
    }
}


allprojects {
	
    group = 'net.christophersnow'
    version = '0.0.2-SNAPSHOT'
    description = """cloudant-sync-p2p"""

    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://maven.restlet.org" }
    maven { url "http://cloudant.github.io/cloudant-sync-eap/repository/" }
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "file:///${new File(".").absolutePath}/repository/")
    }
}

dependencies {
    compile(group: 'com.cloudant', name: 'cloudant-sync-datastore-android', version:'0.13.2')
    compile(group: 'com.cloudant', name: 'cloudant-sync-datastore-core', version:'0.13.2')
    compile(group: 'com.cloudant', name: 'cloudant-sync-datastore-javase', version:'0.13.2')

    compile("org.restlet.jse:org.restlet:2.1-M7") {
        exclude group: 'org.osgi', module: 'org.osgi.core'
    }
    compile("org.restlet.jse:org.restlet.ext.simple:2.1-M7")

    // there are a couple of unit tests in this project
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    testCompile group: 'junit', name: 'junit', version:'4.11'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.9.5'
}

// tasks

defaultTasks 'clean', 'build'

tasks.withType(Test) {
    // the native dir is one directory up from the core project dir
    systemProperty "sqlite4java.library.path", "../native"
}

// integration tests


task pullDockerCouchdb(type: DockerPullImage) {
   repository = 'klaemo/couchdb'
   tag = '1.6.1'
}

task createMyAppContainer(type: DockerCreateContainer) {
    dependsOn pullDockerCouchdb
    targetImageId { 'klaemo/couchdb:1.6.1' }
    portBindings = ['5984:5984']
}

task startMyAppContainer(type: DockerStartContainer) {
    dependsOn createMyAppContainer
    targetContainerId { createMyAppContainer.getContainerId() }
}

task stopMyAppContainer(type: DockerStopContainer) {
    targetContainerId { createMyAppContainer.getContainerId() }
}

task executeApp(type:JavaExec) {
   dependsOn startMyAppContainer

   main 'com.cloudant.p2p.listener.Application'
   classpath sourceSets.main.runtimeClasspath 
   systemProperty 'sqlite4java.library.path','native'
   systemProperty 'DB_DIR', System.getProperty("DB_DIR")
}

// Cleanup

gradle.taskGraph.afterTask { Task task, TaskState state ->
    if ( tasks.createMyAppContainer.getContainerId() )
    {
       //tasks.stopMyAppContainer.execute()
    }
}
